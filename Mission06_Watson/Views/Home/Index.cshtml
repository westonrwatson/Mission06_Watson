<!-- Mission07 Updated -->

@model IEnumerable<Mission06_Watson.Models.Movie>

@{
    ViewData["Title"] = "The Joel Hilton Film Collection";
}

<h1>The Joel Hilton Film Collection</h1>

<table class="table table-striped">
    <thead>
        <tr>
            <th>Title</th>
            <th>Category</th>
            <th>Year</th>
            <th>Director</th>
            <th>Rating</th>
            <th>Edited</th>
            <th>Lent To</th>
            <th>Notes</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var movie in Model)
    {
        <tr id="row-@movie.MovieId">
            <td>
                <span class="view-mode">@movie.Title</span>
                <input type="text" name="Title" class="edit-mode form-control" value="@movie.Title" hidden>
            </td>
            <td>
                <span class="view-mode">@movie.Category</span>
                <input type="text" name="Category" class="edit-mode form-control" value="@movie.Category" hidden>
            </td>
            <td>
                <span class="view-mode">@movie.Year</span>
                <input type="text" name="Year" class="edit-mode form-control" value="@movie.Year" hidden>
            </td>
            <td>
                <span class="view-mode">@movie.Director</span>
                <input type="text" name="Director" class="edit-mode form-control" value="@movie.Director" hidden>
            </td>
            <td>
                <span class="view-mode">@movie.Rating</span>
                <select name="Rating" class="edit-mode form-control" hidden>
                    <option value="G" selected="@(movie.Rating == "G" ? "selected" : null)">G</option>
                    <option value="PG" selected="@(movie.Rating == "PG" ? "selected" : null)">PG</option>
                    <option value="PG-13" selected="@(movie.Rating == "PG-13" ? "selected" : null)">PG-13</option>
                    <option value="R" selected="@(movie.Rating == "R" ? "selected" : null)">R</option>
                </select>
            </td>
            <td>
                <input type="checkbox" name="Edited" class="edit-mode" @(movie.Edited ? "checked" : "") hidden>
                <span class="view-mode">@(movie.Edited ? "Yes" : "No")</span>
            </td>
            <td>
                <span class="view-mode">@movie.LentTo</span>
                <input type="text" name="LentTo" class="edit-mode form-control" value="@movie.LentTo" hidden>
            </td>
            <td>
                <span class="view-mode">@movie.Notes</span>
                <input type="text" name="Notes" class="edit-mode form-control" value="@movie.Notes" hidden>
            </td>
            <td>
                <button class="btn btn-warning btn-sm edit-btn">Edit</button>
                <button class="btn btn-success btn-sm save-btn" data-id="@movie.MovieId" hidden>Save</button>
                <button class="btn btn-danger btn-sm delete-btn" data-id="@movie.MovieId">Delete</button>
            </td>
        </tr>
    }
    </tbody>
</table>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $(".edit-btn").click(function () {
            var row = $(this).closest("tr");
            row.find(".view-mode").hide();
            row.find(".edit-mode").prop("hidden", false);
            row.find(".edit-btn").hide();
            row.find(".save-btn").prop("hidden", false);
        });

        $(".save-btn").click(function () {
            var row = $(this).closest("tr");
            var movieId = $(this).data("id");

            // Correctly fetch input values by name attribute
            var titleValue = row.find("input[name='Title']").val().trim();
            var categoryValue = row.find("input[name='Category']").val().trim();
            var yearValue = row.find("input[name='Year']").val().trim();
            var directorValue = row.find("input[name='Director']").val().trim();
            var ratingValue = row.find("select[name='Rating']").val();
            var editedValue = row.find("input[name='Edited']").is(":checked");  // Fix: Checkbox handling
            var lentToValue = row.find("input[name='LentTo']").val()?.trim() || null;
            var notesValue = row.find("input[name='Notes']").val()?.trim() || null;

            var updatedMovie = {
                MovieId: movieId,
                Title: titleValue,
                Category: categoryValue,
                Year: yearValue,
                Director: directorValue,
                Rating: ratingValue,
                Edited: editedValue,
                LentTo: lentToValue,
                Notes: notesValue
            };

            console.log("Sending updated data:", updatedMovie); // Debugging output

            $.ajax({
                url: '/Home/UpdateMovie',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(updatedMovie),
                success: function () {
                    location.reload(); // Refresh after successful update
                },
                error: function (xhr, status, error) {
                    alert("Error updating movie: " + xhr.responseText);
                }
            });
        });

        $(".delete-btn").click(function () {
            var movieId = $(this).data("id");
            if (confirm("Are you sure you want to delete this movie?")) {
                $.post('/Home/DeleteMovie', { id: movieId }, function () {
                    location.reload();
                }).fail(function () {
                    alert("Error deleting movie.");
                });
            }
        });
    });
</script>
